c
rb_hash
(@redis.get "home_timeline") !=nil
q
(@redis.get "home_timeline") != nil
@redis.get "home_timeline" == nil
@redis.get "home_timeline" != nil
@redis.get "sadf"
@redis.get "test"
@redis.get "home_timeline" != nil
@redis.get "home_timeline" !=nil
@redis.get "home_timeline"
c
q
@redis.flushall
@redis
@redi
rb_hash["tweets"]
rb_hash
c
rb_hash = JSON.parse(@redis.get("home_timeline"))
rb_hash
q
rb_hash["tweets"]
rb_hash["tweets"] << { id: tweet.id, time_created: tweet.time_created, user_id: tweet.user_id, retweet_id: tweet.retweet_id }
c
{ id: tweet.id, time_created: tweet.time_created, user_id: tweet.user_id, retweet_id: tweet.retweet_id }
q
tweet
rb_hash["tweets"] << { id: tweet.id, time_created: tweet.time_created, user_id: tweet.user_id, retweet_id: tweet.retweet_id }
q
c
q
@followers.include? session[:user].id.to_s
@followers.include? session[:user].id
session[:user].id
@followers
c
q
ENV["REDIS_URL"]
"REDIS_URL"
redis = Redis.new(url: ENV["REDIS_URL"])
@redis.ping
@followercontroller.get_followers(params[:id])
@redis = Redis.new(url: ENV["REDIS_URL"])
@followercontroller.get_followers(params[:id])
@followercontroller
c
q
@redis.lrange('1_f',0,1)==[]
@redis.lrange('1_follo',0,1)
@redis.lrange('1_following',0,1)
@redis.get(1_following)
@redis.get('1_following',0,1)
@redis.get('1_following')
@redis.get(1_following)
following_id= make_following_id(user)
follower_count_id= make_followercount_id(user)
@redis.lrange(following_id,0,-1)
@redis.lrange(following_d,0,-1)
@redis.lrange(1_following,0,-1)
@redis.lrange(following_id,0,-1)
@redis.lrange(following_id)
@redis.get(following_id)
following_id= make_following_id(user)
c
@redis.get(following_id)
n
following_id
n
q
@followercontroller.get_following(params[:id])
V
@followercontroller.get_followers(params[:id])
@followercontroller.get_following(params[:id])
c
q
@followers =@followercontroller.get_followers(params[:id])
@followers
c
n
c
@followercontroller.get_followers(params[:id])
q
@followercontroller.get_followers(params[:id])
params[:id]
c
q
c
q
@followercontroller
c
q
@followercontroller.redis
@followercontroller.@redis
@followercontroller.get_following_count(1)
@followercontroller.get_following_count(@user.id)
@followercontroller
c
@followercontroller
q
@followercontroller
c
q
@followercontroller
@followercontroller.get_following_count(1)
@user
@followercontroller.get_following_count(@user.id)
@followercontroller.get_following_count(@user.id
n
c
n
nl
fcount_id
n
fcount_id
q
redis
c
ENV["REDIS_URL"]
q
ENV
ENV[REDIS_URL]
REDIS_URL
q
redis.ping
redis
q
redis = Redis.new
q
y
q
redis = Redis.new
q
 settings.cache.fetch('greet') { 'Hello, World!' }
redis
redis.new
redis-sinatra
q
Redis
redis=Redis.new
<<<<<<< HEAD
c
=======
q
c
q
require 'uri'
REDIS.ping
REDIS = Redis.new(:host => uri.host, :port => uri.port, :password => uri.password)
uri = URI.parse(REDISTOGO_URL)
REDISTOGO_URL = "redis://localhost:6379/"
r.ping
r = Redis.new
q
r.ping
r
r = Redis.new
redis.ping
redis
q
require 'rubygems'
redis.ping
q
c
redis.set("mykey", "hello world")
redis = Redis.new(url: "redis://:p4ssw0rd@10.0.1.1:6380/15")
redis.set("mykey", "hello world")
redis = Redis.new(password: "mysecret")
redis = Redis.new(path: "/tmp/redis.sock")
redis = Redis.new(host: "10.0.1.1", port: 6380, db: 15)
redis.set("mykey","hello world")
redis
exit
tweet2.retweet.text
tweet2.retweet
tweet2
>>>>>>> 99ac6f10b624264165c049f6ce60bc2b5ba28600
redis.ping
c
ENV["REDIS_URL"]
q
ENV
ENV[REDIS_URL]
REDIS_URL
q
redis.ping
redis
q
redis = Redis.new
q
y
q
redis = Redis.new
q
 settings.cache.fetch('greet') { 'Hello, World!' }
redis
redis.new
redis-sinatra
q
Redis
redis=Redis.new
<<<<<<< HEAD
c
=======
q
c
q
require 'uri'
REDIS.ping
REDIS = Redis.new(:host => uri.host, :port => uri.port, :password => uri.password)
uri = URI.parse(REDISTOGO_URL)
REDISTOGO_URL = "redis://localhost:6379/"
r.ping
r = Redis.new
q
r.ping
r
r = Redis.new
redis.ping
redis
q
require 'rubygems'
redis.ping
q
c
redis.set("mykey", "hello world")
redis = Redis.new(url: "redis://:p4ssw0rd@10.0.1.1:6380/15")
redis.set("mykey", "hello world")
redis = Redis.new(password: "mysecret")
redis = Redis.new(path: "/tmp/redis.sock")
redis = Redis.new(host: "10.0.1.1", port: 6380, db: 15)
redis.set("mykey","hello world")
redis
exit
tweet2.retweet.text
tweet2.retweet
tweet2
>>>>>>> 99ac6f10b624264165c049f6ce60bc2b5ba28600
